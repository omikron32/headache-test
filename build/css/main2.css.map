{"version":3,"sources":["main2.css","components/_reset.scss","components/_fonts.scss","components/_index2.scss","helpers/common/_functions.scss"],"names":[],"mappings":"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","file":"main2.css","sourcesContent":["@charset \"UTF-8\";\n/*\n * Функция возвращающая null вместо error если значение в списке не найдено\n * @param {List} $list - список\n * @param {Number}$index - индекс эелемента\n */\n/*\n * Функция возвращающая z-index елемента\n * @requiered  $z-layers список слоев;\n * @param {List, Map} $z-layers - массив со именами и значениями z-index;\n * @param {String} $name - елемент;\n * https://codepen.io/jakob-e/pen/KpdBzY\n */\n/*\n  Более короткая версия функции z-index;\n  @param {String, List}\n  @return {Number}\n */\n/*\n  Функция обрезающая единицы измерения и возвращающая число\n  @param {Number}\n  @return {Number}\n */\n/*Функция замены чего-либо в строке\n  @author Hugo Giraudel\n  @param {String} $string - строка в которой ищем\n  @param {String} $search - то что нужно заменить\n  @param {String} $replace ('') - то на что нужно заменить\n  @return {String} - обновленная строка\n*/\n/*\n  Функция возвращающая значение в em\n  **ВСЕГДА ДОЛЖНО БЫТЬ КАК МИНИМУМ 2 ВХОДНЫХ ПАРАМЕТРА**\n  - сколько угодно значений может быть передано в функцию\n  - последний параметр всегда указывает в каком контексте надо считать em'ы\n  @list, @Number $values - значения\n  @return EM\n\n  Примеры :\n    font-size: em($h1-font-size, 16);\n    font-size: em($h1-font-size, $context); Указание контекста(шрифта родителя)\n    border-bottom: em(1px solid black) => .0625em solid black) ;\n    box-shadow: em(0 0 2px #ccc, inset 0 0 5px #eee, $h1-font-size) => 0 0 .125em #ccc, inset 0 0 .3125em #eee; // Множественные значения\n\n  source: https://github.com/pierreburel/sass-em;\n */\n/*\n  Функция возвращающая факториал\n  @param {Number} $number - число\n  @return {Number} - число\n */\n/*\n  Pi\n */\n/*\n  Функция вычсисления радианы\n  @param {Number} $angle - угол\n  @return {Number} - радиан\n */\n/*\n  Функция возвразающая синус угла\n  @param {Number} $angle - угол\n  @return {Number} - синус угла\n */\n/*\n  Функция возвразающая косинус угла\n  @param {Number} $angle - угол\n  @return {Number} - синус угла\n */\n/*\n * Функция возвращающая null вместо error если значение в списке не найдено\n * @param {List} $list - список\n * @param {Number}$index - индекс эелемента\n */\n/*\n * Функция возвращающая z-index елемента\n * @requiered  $z-layers список слоев;\n * @param {List, Map} $z-layers - массив со именами и значениями z-index;\n * @param {String} $name - елемент;\n * https://codepen.io/jakob-e/pen/KpdBzY\n */\n/*\n  Более короткая версия функции z-index;\n  @param {String, List}\n  @return {Number}\n */\n/*\n  Функция обрезающая единицы измерения и возвращающая число\n  @param {Number}\n  @return {Number}\n */\n/*Функция замены чего-либо в строке\n  @author Hugo Giraudel\n  @param {String} $string - строка в которой ищем\n  @param {String} $search - то что нужно заменить\n  @param {String} $replace ('') - то на что нужно заменить\n  @return {String} - обновленная строка\n*/\n/*\n  Функция возвращающая значение в em\n  **ВСЕГДА ДОЛЖНО БЫТЬ КАК МИНИМУМ 2 ВХОДНЫХ ПАРАМЕТРА**\n  - сколько угодно значений может быть передано в функцию\n  - последний параметр всегда указывает в каком контексте надо считать em'ы\n  @list, @Number $values - значения\n  @return EM\n\n  Примеры :\n    font-size: em($h1-font-size, 16);\n    font-size: em($h1-font-size, $context); Указание контекста(шрифта родителя)\n    border-bottom: em(1px solid black) => .0625em solid black) ;\n    box-shadow: em(0 0 2px #ccc, inset 0 0 5px #eee, $h1-font-size) => 0 0 .125em #ccc, inset 0 0 .3125em #eee; // Множественные значения\n\n  source: https://github.com/pierreburel/sass-em;\n */\n/*\n  Функция возвращающая факториал\n  @param {Number} $number - число\n  @return {Number} - число\n */\n/*\n  Pi\n */\n/*\n  Функция вычсисления радианы\n  @param {Number} $angle - угол\n  @return {Number} - радиан\n */\n/*\n  Функция возвразающая синус угла\n  @param {Number} $angle - угол\n  @return {Number} - синус угла\n */\n/*\n  Функция возвразающая косинус угла\n  @param {Number} $angle - угол\n  @return {Number} - синус угла\n */\n/*\n Миксин соотношение сторон\n\n Примеры:\n\n   @include aspect-ratio($ratio or $width, $height);\n\n  .class { @include aspect-ratio(); }            // без арргуменов 1:1;\n  .class { @include aspect-ratio(16, 9); }       // Ширина и длинна\n  .class { @include aspect-ratio(1.777778); }    // вычисленное значение ($width/$height)\n  .class { @include aspect-ratio(4px, 3px); }    // Одинаковые еденицы измерения\n  .class { @include aspect-ratio($ratio: 1.2); } // $ratio\n\n  source: https://codepen.io/jakob-e/pen/WvrJwN\n\n */\n/*\n Миксин преобразования px в em согласно контексту\n Примеры:\n   @include em((\n      margin: 20px 5%,\n      padding: 10px\n    ), $context); //указание контекста\n */\n/*\n Миксин получения значения z-index по имени\n\n Примеры:\n  .class { z-index: z('modal-window'); }  //  =>  z-index: 6\n\n */\n/*\n Миксин получения значения z-index по имени\n\n Примеры:\n  .class { @include z('modal-window'); }  //  =>  z-index: 6\n */\n/*\n  Функция получения  vw или vh относительно px\n  @param {Number} Object число в пикселях\n  @param {Number} resolution\n */\n/*\n  Миксин подстановки троеточия в строке если она невмещается в контейнер\n */\n/* Input's autocomplete styles\n -------------------------- */\n/*\n  Примеры\n\n  $grid-configuration: (\n  'columns': 12,\n  'layouts': (\n    'small': 800px,\n    'medium': 1000px,\n    'large': 1200px,\n    ),\n  );\n\n  // Without `map-deep-get`\n  $medium: map-get(map-get($grid-configuration, 'layouts'), 'medium');\n\n  // With `map-deep-get`\n  $medium: map-deep-get($grid-configuration, 'layouts', 'medium');\n */\n/*\n\n  $grid-configuration: (\n    'columns': 12,\n    'layouts': (\n      'small': 800px,\n      'medium': 1000px,\n      'large': 1200px,\n    ),\n  );\n\n  Примеры:\n\n  // Without `map-deep-set`\n  $grid-configuration: map-merge($grid-configuration, map-merge(map-get($grid-configuration, 'layouts'), ('large': 1300px)));\n\n  // With `map-deep-set`\n  $medium: map-deep-set($grid-configuration, 'layouts', 'medium', 1300px);\n */\n/*\n  $grid-configuration: (\n      'columns': 12,\n      'layouts': (\n        'small': 800px,\n        'medium': 1000px,\n        'large': 1200px,\n      ),\n    );\n\n  Примеры:\n   Maximum depth\n   $depth: map-depth($grid-configuration);\n   output -> 2\n*/\n/*\n  $grid-configuration: (\n    'columns': 12,\n    'layouts': (\n      'small': 800px,\n      'medium': 1000px,\n      'large': 1200px,\n    ),\n  );\n\n  $depth: map-has-keys($grid-configuration, 'columns', 'layouts');\n  // -> true\n\n  $depth: map-has-keys($grid-configuration, 'columns', 'options');\n  // -> false\n */\n/*\n\n  $grid-configuration: (\n    'columns': 12,\n    'layouts': (\n      'small': 800px,\n      'medium': 1000px,\n      'large': 1200px,\n    ),\n  );\n  Примеры:\n\n    $depth: map-has-keys($grid-configuration, 'layouts', 'medium');\n    // -> true\n\n    $depth: map-has-keys($grid-configuration, 'layouts', 'huge');\n    // -> false\n */\n/*\n  Пример:\n\n  $layout-names: 'small', 'medium', 'large', 'huge';\n  $layout-values: 600px, 900px, 1200px, 1500px;\n\n  $breakpoints: map-zip($layout-names, $layout-values);\n  // -> ('small': 600px, 'medium': 900px, 'large': 1200px, 'huge': 1500px)\n */\n/*\n  Пример:\n\n  $grid-configuration-default: (\n    'columns': 12,\n    'layouts': (\n      'small': 800px,\n      'medium': 1000px,\n      'large': 1200px,\n    ),\n  );\n\n  $grid-configuration-custom: (\n    'layouts': (\n      'large': 1300px,\n      'huge': 1500px\n    ),\n  );\n\n  $grid-configuration-user: (\n    'direction': 'ltr',\n    'columns': 16,\n    'layouts': (\n      'large': 1300px,\n      'huge': 1500px\n    ),\n  );\n\n  // Not deep\n  $grid-configuration: map-extend($grid-configuration-default, $grid-configuration-custom, $grid-configuration-user);\n  // -> (\"columns\": 16, \"layouts\": ((\"large\": 1300px, \"huge\": 1500px)), \"direction\": \"ltr\")\n\n  // Deep\n  $grid-configuration: map-extend($grid-configuration-default, $grid-configuration-custom, $grid-configuration-user, true);\n  // -> (\"columns\": 16, \"layouts\": ((\"small\": 800px, \"medium\": 1000px, \"large\": 1300px, \"huge\": 1500px)), \"direction\": \"ltr\")\n */\n/*\n  Миксин дебага map\n */\n/*\n Миксин для rtl\n Примеры:\n   @include dir((\n      margin-left: 20px\n      padding-right: 10px\n      margin: 10px 10px 10px 10px\n    )); //указание контекста\n */\n/*\n * Функция возвращающая null вместо error если значение в списке не найдено\n * @param {List} $list - список\n * @param {Number}$index - индекс эелемента\n */\n/*\n * Функция возвращающая z-index елемента\n * @requiered  $z-layers список слоев;\n * @param {List, Map} $z-layers - массив со именами и значениями z-index;\n * @param {String} $name - елемент;\n * https://codepen.io/jakob-e/pen/KpdBzY\n */\n/*\n  Более короткая версия функции z-index;\n  @param {String, List}\n  @return {Number}\n */\n/*\n  Функция обрезающая единицы измерения и возвращающая число\n  @param {Number}\n  @return {Number}\n */\n/*Функция замены чего-либо в строке\n  @author Hugo Giraudel\n  @param {String} $string - строка в которой ищем\n  @param {String} $search - то что нужно заменить\n  @param {String} $replace ('') - то на что нужно заменить\n  @return {String} - обновленная строка\n*/\n/*\n  Функция возвращающая значение в em\n  **ВСЕГДА ДОЛЖНО БЫТЬ КАК МИНИМУМ 2 ВХОДНЫХ ПАРАМЕТРА**\n  - сколько угодно значений может быть передано в функцию\n  - последний параметр всегда указывает в каком контексте надо считать em'ы\n  @list, @Number $values - значения\n  @return EM\n\n  Примеры :\n    font-size: em($h1-font-size, 16);\n    font-size: em($h1-font-size, $context); Указание контекста(шрифта родителя)\n    border-bottom: em(1px solid black) => .0625em solid black) ;\n    box-shadow: em(0 0 2px #ccc, inset 0 0 5px #eee, $h1-font-size) => 0 0 .125em #ccc, inset 0 0 .3125em #eee; // Множественные значения\n\n  source: https://github.com/pierreburel/sass-em;\n */\n/*\n  Функция возвращающая факториал\n  @param {Number} $number - число\n  @return {Number} - число\n */\n/*\n  Pi\n */\n/*\n  Функция вычсисления радианы\n  @param {Number} $angle - угол\n  @return {Number} - радиан\n */\n/*\n  Функция возвразающая синус угла\n  @param {Number} $angle - угол\n  @return {Number} - синус угла\n */\n/*\n  Функция возвразающая косинус угла\n  @param {Number} $angle - угол\n  @return {Number} - синус угла\n */\n/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block;\n}\n\nbody {\n  line-height: 1;\n}\n\nol, ul {\n  list-style: none;\n}\n\nblockquote, q {\n  quotes: none;\n}\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: \"\";\n  content: none;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\n@font-face {\n  font-family: \"Montserrat\";\n  font-weight: 300;\n  font-style: normal;\n  src: url(\"../../fonts/Montserrat-Light.woff2\") format(\"woff2\");\n  font-display: swap;\n}\n@font-face {\n  font-family: \"Montserrat\";\n  font-weight: 400;\n  font-style: normal;\n  src: url(\"../../fonts/Montserrat-Regular.woff2\") format(\"woff2\");\n  font-display: swap;\n}\n@font-face {\n  font-family: \"Montserrat\";\n  font-weight: 600;\n  font-style: normal;\n  src: url(\"../../fonts/Montserrat-SemiBold.woff2\") format(\"woff2\");\n  font-display: swap;\n}\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: \"Montserrat\", \"Arial\", \"San Francisco\", sans-serif;\n  font-weight: 400;\n  background-color: hsl(0, 0%, 92%);\n  color: #414141;\n}\nbody * {\n  box-sizing: border-box;\n}\n\n.head-section {\n  background-color: hsl(0, 0%, 92%);\n}\n.head-section__img {\n  display: block;\n  margin: 0 auto;\n}\n.head-section__title {\n  text-align: center;\n  font-size: 2.5em;\n  letter-spacing: 0.5em;\n  margin-top: -330px;\n  margin-bottom: 290px;\n}\n\n.header {\n  width: 100%;\n  padding: 1.5625em 0em;\n}\n\n.header-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.header-content__svg {\n  width: 3.1875em;\n  height: 3.1875em;\n}\n\n.container {\n  max-width: 1360px;\n  padding: 0 15px;\n  margin: 0 auto;\n}\n\n.menu {\n  display: flex;\n  align-items: center;\n  list-style-type: none;\n}\n.menu__mail {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 220px;\n  height: 55px;\n  background: #EAEAEA;\n  color: #414141;\n  text-decoration: none;\n  box-shadow: -3px -4px 10px #FFFFFF, 7px 8px 19px rgba(0, 0, 0, 0.12);\n  border-radius: 32px;\n  transition: box-shadow 0.3s;\n}\n.menu__mail:hover {\n  background: linear-gradient(136.12deg, #E4E4E4 -0.86%, rgba(245, 245, 245, 0.92) 108.62%);\n  box-shadow: -17px -8px 25px rgba(255, 255, 255, 0.48), 6px 5px 19px rgba(0, 0, 0, 0.12);\n}\n.menu__mail:active {\n  background: linear-gradient(136.12deg, #E4E4E4 -0.86%, rgba(245, 245, 245, 0.92) 108.62%);\n  box-shadow: -8px -3px 14px rgba(255, 255, 255, 0.48), 4px 4px 12px rgba(0, 0, 0, 0.12);\n}\n.menu__link {\n  color: hsl(0, 0%, 25%);\n  text-transform: lowercase;\n  padding: 0em 2em;\n  text-decoration: none;\n  font-weight: 300;\n}\n.menu__link:hover {\n  color: hsl(0, 0%, 50%);\n}\n\n.about {\n  display: flex;\n  align-items: flex-start;\n  max-width: 1560px;\n  padding-bottom: 14.5625em;\n  gap: 5.3125em;\n}\n\n.about-list {\n  display: flex;\n  flex-wrap: wrap;\n}\n.about-list__item {\n  margin-bottom: 4.0625em;\n}\n.about-list__item:nth-child(2) {\n  margin-top: 4.5625em;\n}\n.about-list__item:nth-child(3) {\n  margin-top: -4.5625em;\n}\n\n.about-item {\n  display: flex;\n  flex-direction: column;\n  flex: 0 1 16.1875em;\n}\n.about-item__img {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 3.75em;\n  height: 3.75em;\n  background: linear-gradient(144.61deg, #E4E4E4 14.1%, rgba(255, 255, 255, 0.92) 84.83%);\n  box-shadow: -17px -8px 25px rgba(255, 255, 255, 0.48), 11px 12px 19px rgba(0, 0, 0, 0.12);\n  border-radius: 1.9375em;\n  margin-bottom: 1.25em;\n}\n.about-item__svg {\n  width: 1.1875em;\n  height: 1.1875em;\n}\n.about-item span {\n  font-weight: 300;\n}\n\n.about-description {\n  max-width: 727px;\n  background: #414141;\n  box-shadow: 63px 65px 178px rgba(0, 0, 0, 0.15);\n  border-radius: 30px;\n  color: #fff;\n  padding: 6em 7em;\n}\n.about-description__title {\n  font-size: 2.5em;\n  font-weight: 600;\n  margin-bottom: 1em;\n}\n.about-description__text {\n  font-weight: 300;\n  line-height: 1.5625em;\n}\n\n.services-section {\n  background-color: #414141;\n  color: #fff;\n  padding: 6.625em 0em;\n}\n\n.services__title {\n  font-size: 2.5em;\n  font-weight: 600;\n  margin-bottom: 1.8em;\n}\n.services__list {\n  display: flex;\n  justify-content: space-between;\n}\n\n.services-item {\n  padding: 3.125em 2.0625em 5.6875em 2.875em;\n  background: linear-gradient(148.65deg, #504F4F 0%, rgba(65, 65, 65, 0) 104.48%);\n  filter: drop-shadow(-45px -9px 70px rgba(98, 98, 98, 0.14)) drop-shadow(43px 42px 52px rgba(0, 0, 0, 0.17));\n  border-radius: 32px;\n}\n.services-item__img {\n  margin-bottom: 4.375em;\n}\n.services-item__title {\n  font-weight: 600;\n  margin-bottom: 1.875em;\n}\n.services-item__text {\n  line-height: 1.5625em;\n  font-weight: 300;\n  color: #EAEAEA;\n}\n\n.feedback__title {\n  font-size: 2.5em;\n  font-weight: 600;\n  color: #414141;\n  margin-bottom: 1em;\n}\n\n.feedback-form {\n  display: flex;\n  justify-content: center;\n  gap: 1.25em;\n  flex-wrap: wrap;\n  max-width: 1181px;\n  margin: 0 auto;\n  padding-bottom: 12.1875em;\n}\n.feedback-form__column {\n  display: flex;\n  flex-direction: column;\n}\n.feedback-form__textarea, .feedback-form__input {\n  font-size: 1em;\n  font-family: \"Montserrat\";\n  width: 554px;\n  padding: 2.125em 1.875em;\n  background: #EAEAEA;\n  border: 0;\n  padding-left: 2.0625em;\n  box-shadow: inset -7px -3px 26px #FFFFFF, inset 3px 3px 8px rgba(65, 65, 65, 0.24);\n  border-radius: 1.25em;\n  color: #414141;\n  transition: box-shadow 0.2s;\n  margin-bottom: 1.25em;\n}\n.feedback-form__textarea::placeholder, .feedback-form__input::placeholder {\n  color: hsl(0, 0%, 65%);\n}\n.feedback-form__textarea:last-child, .feedback-form__input:last-child {\n  margin-bottom: 0;\n}\n.feedback-form__textarea:focus, .feedback-form__input:focus {\n  outline: none;\n  box-shadow: inset -5px -7px 26px #FFFFFF, inset 5px 5px 8px rgba(65, 65, 65, 0.24);\n}\n.feedback-form__textarea {\n  height: 100%;\n  resize: none;\n}\n.feedback-form__button {\n  cursor: pointer;\n  font-size: 1.5em;\n  font-family: \"Montserrat\";\n  flex: 0 0 auto;\n  width: 434px;\n  height: 88px;\n  border: 0;\n  background: #EAEAEA;\n  box-shadow: -3px -4px 10px #FFFFFF, 15px 18px 29px rgba(0, 0, 0, 0.12);\n  border-radius: 3.0416666667em;\n  transition: 0.2s;\n}\n.feedback-form__button:hover {\n  background: linear-gradient(136.12deg, #E4E4E4 -0.86%, rgba(245, 245, 245, 0.92) 108.62%);\n  box-shadow: -17px -8px 25px rgba(255, 255, 255, 0.48), 6px 5px 19px rgba(0, 0, 0, 0.12);\n}\n.feedback-form__button:active {\n  background: linear-gradient(136.12deg, #E4E4E4 -0.86%, rgba(245, 245, 245, 0.92) 108.62%);\n  box-shadow: -8px -3px 14px rgba(255, 255, 255, 0.48), 4px 4px 12px rgba(0, 0, 0, 0.12);\n}\n\n.footer {\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 3.8125em;\n}\n.footer__column {\n  line-height: 1.1875em;\n}\n.footer__link {\n  color: #414141;\n  text-decoration: none;\n}","/* http://meyerweb.com/eric/tools/css/reset/\r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, menu, nav, section {\r\n  display: block;\r\n}\r\nbody {\r\n  line-height: 1;\r\n}\r\nol, ul {\r\n  list-style: none;\r\n}\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n  content: '';\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}","////@include addFont('Montserrat', 'BlackItalic', 900, 'italic');\r\n////@include addFont('Montserrat', 'ExtraBoldItalic', 800 'italic');\r\n////@include addFont('Montserrat', 'BoldItalic', 700 'italic');\r\n////@include addFont('Montserrat', 'SemiBoldItalic', 600 'italic');\r\n////@include addFont('Montserrat', 'MediumItalic', 500 'italic');\r\n////@include addFont('Montserrat', 'Italic', 400, 'italic');\r\n//@include addFont('Montserrat', 'Black', 900,);\r\n//@include addFont('Montserrat', 'ExtraBold', 800);\r\n//@include addFont('Montserrat', 'Bold', 700);\r\n//@include addFont('Montserrat', 'SemiBold', 600);\r\n//@include addFont('Montserrat', 'Medium', 500);\r\n//@include addFont('Montserrat', 'Regular', 400);\r\n\r\n@font-face {\r\n  font-family: 'Montserrat';\r\n  font-weight: 300;\r\n  font-style: normal;\r\n  src: url('../../fonts/Montserrat-Light.woff2') format('woff2');\r\n  font-display: swap;\r\n}\r\n\r\n@font-face {\r\n  font-family: 'Montserrat';\r\n  font-weight: 400;\r\n  font-style: normal;\r\n  src: url('../../fonts/Montserrat-Regular.woff2') format('woff2');\r\n  font-display: swap;\r\n}\r\n\r\n@font-face {\r\n  font-family: 'Montserrat';\r\n  font-weight: 600;\r\n  font-style: normal;\r\n  src: url('../../fonts/Montserrat-SemiBold.woff2') format('woff2');\r\n  font-display: swap;\r\n}\r\n","body {\n  margin: 0;\n  padding: 0;\n  @include fontFamily('Montserrat');\n  font-weight: 400;\n  background-color: hsl(0, 0%, 92%);\n  color: #414141;\n\n  * {\n    box-sizing: border-box;\n  }\n}\n\n.head-section {\n  background-color: hsl(0, 0%, 92%);\n\n  &__img {\n    display: block;\n    margin: 0 auto;\n  }\n\n  &__title {\n    $fz: 40;\n    text-align: center;\n    font-size: em(40, $fz_base);\n    letter-spacing: em(20, $fz);\n    margin-top: -330px;\n    margin-bottom: 290px;\n  }\n}\n\n.header {\n  width: 100%;\n  padding: em(25 0, $fz);\n}\n\n.header-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  &__svg {\n    width: em(51, $fz);\n    height: em(51, $fz);\n  }\n}\n\n.container {\n  max-width: 1360px;\n  padding: 0 15px;\n  margin: 0 auto;\n}\n\n.menu {\n  display: flex;\n  align-items: center;\n  list-style-type: none;\n\n  &__mail {\n    display: flex;\n    justify-content: center;align-items: center;\n    width: 220px;\n    height: 55px;\n    background: #EAEAEA;\n    color: #414141;\n    text-decoration: none;\n    box-shadow: -3px -4px 10px #FFFFFF, 7px 8px 19px rgba(0, 0, 0, 0.12);\n    border-radius: 32px;\n    transition: box-shadow .3s ;\n\n    &:hover {\n      background: linear-gradient(136.12deg, #E4E4E4 -0.86%, rgba(245, 245, 245, 0.92) 108.62%);\n      box-shadow: -17px -8px 25px rgba(255, 255, 255, 0.48), 6px 5px 19px rgba(0, 0, 0, 0.12);\n    }\n\n    &:active {\n      background: linear-gradient(136.12deg, #E4E4E4 -0.86%, rgba(245, 245, 245, 0.92) 108.62%);\n      box-shadow: -8px -3px 14px rgba(255, 255, 255, 0.48), 4px 4px 12px rgba(0, 0, 0, 0.12);\n    }\n  }\n\n  &__item {\n\n  }\n\n  &__link {\n    color: hsl(0, 0%, 25%);\n    text-transform: lowercase;\n    padding: em(0 32, $fz);\n    text-decoration: none;\n    font-weight: 300;\n\n    &:hover {\n      color: hsl(0, 0%, 50%);\n    }\n  }\n}\n\n.about {\n  display: flex;\n  align-items: flex-start;\n  max-width: 1560px;\n  padding-bottom: em(233, $fz);\n  gap: em(85, $fz);\n}\n\n.about-list {\n  display: flex;\n  flex-wrap: wrap;\n\n  &__item {\n    margin-bottom: em(65, $fz);\n\n    &:nth-child(2) {\n      margin-top: em(73, $fz);\n    }\n\n    &:nth-child(3) {\n      margin-top: em(-73, $fz);\n    }\n  }\n}\n\n.about-item {\n  display: flex;\n  flex-direction: column;\n  flex: 0 1 em(259, $fz);\n\n  &__img {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: em(60, $fz);\n    height: em(60, $fz);\n    background: linear-gradient(144.61deg, #E4E4E4 14.1%, rgba(255, 255, 255, 0.92) 84.83%);\n    box-shadow: -17px -8px 25px rgba(255, 255, 255, 0.48), 11px 12px 19px rgba(0, 0, 0, 0.12);\n    border-radius: em(31, $fz);\n    margin-bottom: em(20, $fz);\n  }\n\n  &__svg {\n    width: em(19, $fz);\n    height: em(19, $fz);\n  }\n\n  span {\n    font-weight: 300;\n  }\n}\n\n.about-description {\n  max-width: 727px; //\n  background: #414141;\n  box-shadow: 63px 65px 178px rgba(0, 0, 0, 0.15);\n  border-radius: 30px;\n  color: #fff;\n  padding: em(96 112, $fz);\n  \n  &__title {\n    $fz: 40;\n    font-size: em($fz, $fz_base);\n    font-weight: 600;\n    margin-bottom: em(40, $fz);\n  }\n\n  &__text {\n    font-weight: 300;\n    line-height: em(25, $fz);\n  }\n}\n\n.services-section {\n  background-color: #414141;\n  color: #fff;\n  padding: em(106 0, $fz);\n}\n\n.services {\n  &__title {\n    $fz: 40;\n    font-size: em($fz, $fz_base);\n    font-weight: 600;\n    margin-bottom: em(72, $fz);\n  }\n\n  &__list {\n    display: flex;\n    justify-content: space-between;\n  }\n}\n\n.services-item {\n  padding: em(50 33 91 46, $fz);\n  background: linear-gradient(148.65deg, #504F4F 0%, rgba(65, 65, 65, 0) 104.48%);\n  filter: drop-shadow(-45px -9px 70px rgba(98, 98, 98, 0.14)) drop-shadow(43px 42px 52px rgba(0, 0, 0, 0.17));\n  border-radius: 32px;\n\n  &__img {\n    margin-bottom: em(70, $fz);\n  }\n\n  &__title {\n    font-weight: 600;\n    margin-bottom: em(30, $fz);\n  }\n\n  &__text {\n    line-height: em(25, $fz);\n    font-weight: 300;\n    color: #EAEAEA;\n  }\n}\n\n.feedback {\n  &__title {\n    $fz: 40;\n    font-size: em($fz, $fz_base);\n    font-weight: 600;\n    color: #414141;\n    margin-bottom: em(40, $fz);\n  }\n}\n\n.feedback-form {\n  display: flex;\n  justify-content: center;\n  gap: em(20, $fz);\n  flex-wrap: wrap;\n  max-width: 1181px;\n  margin: 0 auto;\n  padding-bottom: em(195, $fz);\n\n  &__column {\n    display: flex;\n    flex-direction: column;\n  }\n\n  &__textarea,\n  &__input {\n    $fz: 16;\n    font-size: em(16, $fz);\n    font-family: 'Montserrat';\n    width: 554px;\n    padding: em(34 30, $fz);\n    background: #EAEAEA;\n    border: 0;\n    padding-left: em(33, $fz);\n    box-shadow: inset -7px -3px 26px #FFFFFF, inset 3px 3px 8px rgba(65, 65, 65, 0.24);\n    border-radius: em(20, $fz);\n    color: #414141;\n    transition: box-shadow .2s;\n    margin-bottom: em(20, $fz);\n\n    &::placeholder {\n      color: hsl(0, 0%, 65%);\n    }\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n\n    &:focus {\n      outline: none;\n      box-shadow: inset -5px -7px 26px #FFFFFF, inset 5px 5px 8px rgba(65, 65, 65, 0.24);\n    }\n  }\n\n  &__textarea {\n    height: 100%;\n    resize: none;\n  }\n\n  &__button {\n    cursor: pointer;\n    $fz: 24;\n    font-size: em($fz, $fz_base);\n    font-family: 'Montserrat';\n    flex: 0 0 auto;\n    width: 434px;\n    height: 88px;\n    border: 0;\n\n    background: #EAEAEA;\n    box-shadow: -3px -4px 10px #FFFFFF, 15px 18px 29px rgba(0, 0, 0, 0.12);\n    border-radius: em(73, $fz);\n    transition: .2s;\n\n    &:hover {\n      background: linear-gradient(136.12deg, #E4E4E4 -0.86%, rgba(245, 245, 245, 0.92) 108.62%);\n      box-shadow: -17px -8px 25px rgba(255, 255, 255, 0.48), 6px 5px 19px rgba(0, 0, 0, 0.12);\n    }\n\n    &:active {\n      background: linear-gradient(136.12deg, #E4E4E4 -0.86%, rgba(245, 245, 245, 0.92) 108.62%);\n      box-shadow: -8px -3px 14px rgba(255, 255, 255, 0.48), 4px 4px 12px rgba(0, 0, 0, 0.12);\n    }\n  }\n}\n\n.footer {\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: em(61, $fz);\n\n  &__column {\n    line-height: em(19, $fz);\n  }\n\n  &__link {\n    color: #414141;\n    text-decoration: none;\n  }\n}","/*\r\n * Функция возвращающая null вместо error если значение в списке не найдено\r\n * @param {List} $list - список\r\n * @param {Number}$index - индекс эелемента\r\n */\r\n@function nth-value($list, $index) {\r\n  @return if(length($list) >= $index, nth($list, $index), null);\r\n}\r\n\r\n/*\r\n * Функция возвращающая z-index елемента\r\n * @requiered  $z-layers список слоев;\r\n * @param {List, Map} $z-layers - массив со именами и значениями z-index;\r\n * @param {String} $name - елемент;\r\n * https://codepen.io/jakob-e/pen/KpdBzY\r\n */\r\n@function z-index($name) {\r\n  $z: null;\r\n  @if type-of($z-layers) == map {\r\n    $z: map-get($z-layers, $name);\r\n  }\r\n  @if type-of($z-layers) == list {\r\n    @for $i from 1 through length($z-layers) {\r\n      @if nth($z-layers, $i) == $name {\r\n        $z: $i;\r\n      }\r\n    }\r\n  }\r\n  @if $z {\r\n    @return $z;\r\n  } @else {\r\n    @error ('Could not find a z-index for `#{$name}`');\r\n  }\r\n}\r\n\r\n/*\r\n  Более короткая версия функции z-index;\r\n  @param {String, List}\r\n  @return {Number}\r\n */\r\n@function z($arglist...) {\r\n  @return z-index($arglist...);\r\n}\r\n\r\n/*\r\n  Функция обрезающая единицы измерения и возвращающая число\r\n  @param {Number}\r\n  @return {Number}\r\n */\r\n@function strip-units($number) {\r\n  @return calc($number / ($number * 0 + 1));\r\n}\r\n\r\n/*Функция замены чего-либо в строке\r\n  @author Hugo Giraudel\r\n  @param {String} $string - строка в которой ищем\r\n  @param {String} $search - то что нужно заменить\r\n  @param {String} $replace ('') - то на что нужно заменить\r\n  @return {String} - обновленная строка\r\n*/\r\n@function str-replace($string, $search, $replace: '') {\r\n  $index: str-index($string, $search);\r\n\r\n  @if $index {\r\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\r\n  }\r\n\r\n  @return $string;\r\n}\r\n\r\n@function to-bool($value) {\r\n  @if ($value == '' or $value == 0 or $value == ()) {\r\n    @return false\r\n  } @else {\r\n    @return true\r\n  }\r\n}\r\n\r\n/*\r\n  Функция возвращающая значение в em\r\n  **ВСЕГДА ДОЛЖНО БЫТЬ КАК МИНИМУМ 2 ВХОДНЫХ ПАРАМЕТРА**\r\n  - сколько угодно значений может быть передано в функцию\r\n  - последний параметр всегда указывает в каком контексте надо считать em'ы\r\n  @list, @Number $values - значения\r\n  @return EM\r\n\r\n  Примеры :\r\n    font-size: em($h1-font-size, 16);\r\n    font-size: em($h1-font-size, $context); Указание контекста(шрифта родителя)\r\n    border-bottom: em(1px solid black) => .0625em solid black) ;\r\n    box-shadow: em(0 0 2px #ccc, inset 0 0 5px #eee, $h1-font-size) => 0 0 .125em #ccc, inset 0 0 .3125em #eee; // Множественные значения\r\n\r\n  source: https://github.com/pierreburel/sass-em;\r\n */\r\n\r\n@function em($values...) {\r\n  $context: strip-units(nth($values, length($values)));\r\n  $result: ();\r\n  $separator: list_separator($values);\r\n\r\n  @for $i from 1 through length($values) - 1 {\r\n    $value: nth($values, $i);\r\n    @if type-of($value) == 'number' {\r\n      $value: strip-units($value);\r\n      $result: append($result, calc($value / $context * 1em), $separator);\r\n    } @else if type-of($value) == 'list' {\r\n      $result: append($result, em(append($value, $context)...), $separator);\r\n    } @else {\r\n      $result: append($result, $value, $separator);\r\n    }\r\n  }\r\n\r\n  @return if(length($result) == 1, nth($result, 1), $result);\r\n}\r\n\r\n@function vw($values...) {\r\n  $size: strip-units(nth($values, length($values)));\r\n  $result: ();\r\n  $separator: list_separator($values);\r\n\r\n  @for $i from 1 through length($values) - 1 {\r\n    $value: nth($values, $i);\r\n    @if type-of($value) == 'number' {\r\n      $value: strip-units($value);\r\n      $result: append($result, $value / $size * 100vw, $separator);\r\n    } @else if type-of($value) == 'list' {\r\n      $result: append($result, vw(append($value, $size)...), $separator);\r\n    } @else {\r\n      $result: append($result, $value, $separator);\r\n    }\r\n  }\r\n\r\n  @return if(length($result) == 1, nth($result, 1), $result);\r\n}\r\n\r\n@function vh($values...) {\r\n  $size: strip-units(nth($values, length($values)));\r\n  $result: ();\r\n  $separator: list_separator($values);\r\n\r\n  @for $i from 1 through length($values) - 1 {\r\n    $value: nth($values, $i);\r\n    @if type-of($value) == 'number' {\r\n      $value: strip-units($value);\r\n      $result: append($result, $value / $size * 100vh, $separator);\r\n    } @else if type-of($value) == 'list' {\r\n      $result: append($result, vh(append($value, $size)...), $separator);\r\n    } @else {\r\n      $result: append($result, $value, $separator);\r\n    }\r\n  }\r\n\r\n  @return if(length($result) == 1, nth($result, 1), $result);\r\n}\r\n\r\n@function gcd($a, $b) {\r\n  // From: http://rosettacode.org/wiki/Greatest_common_divisor#JavaScript\r\n  @if ($b != 0) {\r\n    @return gcd($b, $a % $b);\r\n  } @else {\r\n    @return abs($a);\r\n  }\r\n}\r\n\r\n@function nth-root($num, $n: 2, $prec: 12) {\r\n  // From: http://rosettacode.org/wiki/Nth_root#JavaScript\r\n  $x: 1;\r\n\r\n  @for $i from 0 through $prec {\r\n    $x: 1 / $n * (($n - 1) * $x + ($num / pow($x, $n - 1)));\r\n  }\r\n\r\n  @return $x;\r\n}\r\n\r\n@function pow($base, $exponent, $prec: 12) {\r\n  // Handles decimal exponents by trying to convert them into a fraction and then use a nthRoot-algorithm for parts of the calculation\r\n  @if (floor($exponent) != $exponent) {\r\n    $prec2: pow(10, $prec);\r\n    $exponent: round($exponent * $prec2);\r\n    $denominator: gcd($exponent, $prec2);\r\n    @return nth-root(pow($base, $exponent / $denominator), $prec2 / $denominator, $prec);\r\n  }\r\n\r\n  $value: $base;\r\n  @if $exponent > 1 {\r\n    @for $i from 2 through $exponent {\r\n      $value: $value * $base;\r\n    }\r\n  } @else if $exponent < 1 {\r\n    @for $i from 0 through -$exponent {\r\n      $value: $value / $base;\r\n    }\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n/*\r\n  Функция возвращающая факториал\r\n  @param {Number} $number - число\r\n  @return {Number} - число\r\n */\r\n@function fact($number) {\r\n  $value: 1;\r\n  @if $number > 0 {\r\n    @for $i from 1 through $number {\r\n      $value: $value * $i;\r\n    }\r\n  }\r\n  @return $value;\r\n}\r\n// Round a number to specified digits.\r\n//\r\n// @param  {Number} $number A number to round\r\n// @param  {Number} [$digits:0] Digits to output\r\n// @param  {String} [$mode:round] (round|ceil|floor) How to round a number\r\n// @return {Number} A rounded number\r\n// @example\r\n//     decimal-round(0.333)    => 0\r\n//     decimal-round(0.333, 1) => 0.3\r\n//     decimal-round(0.333, 2) => 0.33\r\n//     decimal-round(0.666)    => 1\r\n//     decimal-round(0.666, 1) => 0.7\r\n//     decimal-round(0.666, 2) => 0.67\r\n//\r\n@function decimal-round ($number, $digits: 0, $mode: round) {\r\n  $n: 1;\r\n  // $number must be a number\r\n  @if type-of($number) != number {\r\n    @warn '#{ $number } is not a number.';\r\n    @return $number;\r\n  }\r\n  // $digits must be a unitless number\r\n  @if type-of($digits) != number {\r\n    @warn '#{ $digits } is not a number.';\r\n    @return $number;\r\n  } @else if not unitless($digits) {\r\n    @warn '#{ $digits } has a unit.';\r\n    @return $number;\r\n  }\r\n  @for $i from 1 through $digits {\r\n    $n: $n * 10;\r\n  }\r\n  @if $mode == round {\r\n    @return round($number * $n) / $n;\r\n  } @else if $mode == ceil {\r\n    @return ceil($number * $n) / $n;\r\n  } @else if $mode == floor {\r\n    @return floor($number * $n) / $n;\r\n  } @else {\r\n    @warn '#{ $mode } is undefined keyword.';\r\n    @return $number;\r\n  }\r\n}\r\n// Ceil a number to specified digits.\r\n//\r\n// @param  {Number} $number A number to round\r\n// @param  {Number} [$digits:0] Digits to output\r\n// @return {Number} A ceiled number\r\n// @example\r\n//     decimal-ceil(0.333)    => 1\r\n//     decimal-ceil(0.333, 1) => 0.4\r\n//     decimal-ceil(0.333, 2) => 0.34\r\n//     decimal-ceil(0.666)    => 1\r\n//     decimal-ceil(0.666, 1) => 0.7\r\n//     decimal-ceil(0.666, 2) => 0.67\r\n//\r\n@function decimal-ceil ($number, $digits: 0) {\r\n  @return decimal-round($number, $digits, ceil);\r\n}\r\n\r\n// Floor a number to specified digits.\r\n//\r\n// @param  {Number} $number A number to round\r\n// @param  {Number} [$digits:0] Digits to output\r\n// @return {Number} A floored number\r\n// @example\r\n//     decimal-floor(0.333)    => 0\r\n//     decimal-floor(0.333, 1) => 0.3\r\n//     decimal-floor(0.333, 2) => 0.33\r\n//     decimal-floor(0.666)    => 0\r\n//     decimal-floor(0.666, 1) => 0.6\r\n//     decimal-floor(0.666, 2) => 0.66\r\n//\r\n@function decimal-floor ($number, $digits: 0) {\r\n  @return decimal-round($number, $digits, floor);\r\n}\r\n/*\r\n  Pi\r\n */\r\n@function pi() {\r\n  @return 3.14159265359;\r\n}\r\n\r\n/*\r\n  Функция вычсисления радианы\r\n  @param {Number} $angle - угол\r\n  @return {Number} - радиан\r\n */\r\n@function rad($angle) {\r\n  $unit: unit($angle);\r\n  $unitless: $angle / ($angle * 0 + 1);\r\n  // If the angle has 'deg' as unit, convert to radians.\r\n  @if $unit == deg {\r\n    $unitless: $unitless / 180 * pi();\r\n  }\r\n  @return $unitless;\r\n}\r\n\r\n/*\r\n  Функция возвразающая синус угла\r\n  @param {Number} $angle - угол\r\n  @return {Number} - синус угла\r\n */\r\n@function sin($angle) {\r\n  $sin: 0;\r\n  $angle: rad($angle);\r\n  // Iterate a bunch of times.\r\n  @for $i from 0 through 10 {\r\n    $sin: $sin + pow(-1, $i) * pow($angle, (2 * $i + 1)) / fact(2 * $i + 1);\r\n  }\r\n  @return $sin;\r\n}\r\n\r\n/*\r\n  Функция возвразающая косинус угла\r\n  @param {Number} $angle - угол\r\n  @return {Number} - синус угла\r\n */\r\n\r\n@function cos($angle) {\r\n  $cos: 0;\r\n  $angle: rad($angle);\r\n  // Iterate a bunch of times.\r\n  @for $i from 0 through 10 {\r\n    $cos: $cos + pow(-1, $i) * pow($angle, 2 * $i) / fact(2 * $i);\r\n  }\r\n  @return $cos;\r\n}\r\n\r\n/// Function to generate long shadows (because flat is so has-been).\r\n/// Property-agnostic: works for both `box-shadow` and `text-shadow`.\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @link https://unindented.org/articles/trigonometry-in-sass/ Pure Sass `cos` and `sin`\r\n///\r\n/// @param {Direction} $direction\r\n///     Shadow's direction (angle or keyword)\r\n/// @param {Length} $length\r\n///     Shadow's length\r\n/// @param {Color} $color\r\n///     Shadow's color\r\n/// @param {Bool | Color} $fade [false]\r\n///     Whether or not shadow should fade:\r\n///     - `false` means no fading, shadow is `$color`\r\n///     - `true`  means fading from `$color` to transparent\r\n///     - a color means fading from `$color` to `$fade`\r\n/// @param {Number} $shadow-count [100]\r\n///     Number of computed shadows\r\n///\r\n/// @return {List} - List of shadows\r\n///\r\n/// @require {function} Compass/helpers/math/cos\r\n///     http://compass-style.org/reference/compass/helpers/math/#cos\r\n/// @require {function} Compass/helpers/math/sin\r\n///     http://compass-style.org/reference/compass/helpers/math/#sin\r\n///\r\n/// @example scss - Usage\r\n/// .foo {\r\n///   text-shadow: long-shadow(42deg, 1em, #16a085);\r\n/// }\r\n/// .bar {\r\n///   box-shadow: long-shadow(to top left, 150px, hotpink, tomato);\r\n/// }\r\n@function long-shadow($direction, $length, $color, $fade: false, $shadow-count: 100) {\r\n  $shadows: ();\r\n  $conversion-map: (\r\n    to top: 180deg,\r\n    to top right: 135deg,\r\n    to right top: 135deg,\r\n    to right: 90deg,\r\n    to bottom right: 45deg,\r\n    to right bottom: 45deg,\r\n    to bottom: 0deg,\r\n    to bottom left: 315deg,\r\n    to left bottom: 315deg,\r\n    to left: 270deg,\r\n    to left top: 225deg,\r\n    to top left: 225deg\r\n  );\r\n\r\n  @if map-has-key($conversion-map, $direction) {\r\n    $direction: map-get($conversion-map, $direction);\r\n  }\r\n\r\n  @for $i from 1 through $shadow-count {\r\n    $current-step: ($i * $length / $shadow-count);\r\n    $current-color: if(not $fade, $color, if(type-of($fade) == 'color', mix($fade, $color, ($i / $shadow-count * 100)), rgba($color, 1 - $i / $shadow-count)));\r\n\r\n    $shadows: append($shadows, (sin(0deg + $direction) * $current-step) (cos(0deg + $direction) * $current-step) 0 $current-color, 'comma');\r\n  }\r\n\r\n  @return $shadows;\r\n}\r\n\r\n/// Returns the opposite direction of each direction in a list\r\n/// @author Hugo Giraudel\r\n/// @param {List} $directions - List of initial directions\r\n/// @return {List} - List of opposite directions\r\n@function opposite-direction($directions) {\r\n  $opposite-directions: ();\r\n  $direction-map: (\r\n    'top': 'bottom',\r\n    'right': 'left',\r\n    'bottom': 'top',\r\n    'left': 'right',\r\n    'center': 'center',\r\n    'ltr': 'rtl',\r\n    'rtl': 'ltr'\r\n  );\r\n\r\n  @each $direction in $directions {\r\n    $direction: to-lower-case($direction);\r\n\r\n    @if map-has-key($direction-map, $direction) {\r\n      $opposite-directions: append($opposite-directions, unquote(map-get($direction-map, $direction)));\r\n    } @else {\r\n      @warn \"No opposite direction can be found for `#{$direction}`. Direction omitted.\";\r\n    }\r\n  }\r\n\r\n  @return $opposite-directions;\r\n}\r\n\r\n@mixin addFont($fontName, $fontType: 'Regular', $fontWeight: 400, $fontStyle: 'normal') {\r\n  @font-face {\r\n    font-family: $fontName;\r\n    src: url('../../fonts/' + $fontName + '/' + $fontName + '-' + $fontType + '.woff2') format('woff2');\r\n    font-weight: $fontWeight;\r\n    font-style: $fontStyle;\r\n    font-display: swap;\r\n  }\r\n}\r\n\r\n@mixin fontFamily($font) {\r\n  font-family: $font, 'Arial', 'San Francisco', sans-serif;\r\n}"]}